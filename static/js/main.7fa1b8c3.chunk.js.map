{"version":3,"sources":["All_Data/Componenets/Teams.js","All_Data/Componenets/Teamstats.js","All_Data/Componenets/Instruction.js","All_Data/Componenets/Playerstats.js","App.js","reportWebVitals.js","index.js"],"names":["Teams","props","useState","updated_teams","setupdated_teams","search_teams","setsearch_teams","search_value","setsearch_value","useEffect","temp","team_data","map","teams","index","new_team","team_name","team1","check","push","className","type","size","value","onChange","e","bar_name","filter_output","filter","team","toLowerCase","includes","length","handle_search","target","Checkbox","checked","name","color","onClick","on_checkbox_change","temp_arr","handlechange","Teamstats","count_of_set","updated_team_stats","style","marginRight","home_wins","away_wins","home_matches","away_matches","Math","round","home_win_percentage","away_win_percentage","marginTop","fontWeight","Instruction","textAlign","fontSize","marginLeft","Playerstats","new_p_details","setnew_p_details","search_player","setsearch_player","p_stats","player","new_data","batsman","total_runs","out","numberofballs","average","Number","strikerate","bar_value","handle_change","player_name","action_event","App","teamstats","App_team_data","setApp_team_data","setcount_of_set","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0g9DAoFeA,MA7Ef,SAAeC,GAAO,MAGwBC,mBAAS,IAHjC,mBAGXC,EAHW,KAGIC,EAHJ,OAMsBF,mBAASC,GAN/B,mBAMXE,EANW,KAMGC,EANH,OASsBJ,mBAAS,IAT/B,mBASXK,EATW,KASGC,EATH,KAmDlB,OAvCAC,qBAAU,WACN,IAAIC,EAAO,GACXC,EAAUC,KAAI,SAACC,EAAOC,GAClB,IAAIC,EAAW,CACXC,UAAWH,EAAMI,MACjBC,OAAO,GAEXR,EAAKS,KAAKJ,MAEdX,EAAiBM,GACjBJ,EAAgBI,KACjB,IA6BC,sBAAKU,UAAU,QAAf,UAEI,sBAAKA,UAAU,cAAf,UAA6B,sBAAMA,UAAU,gBAAhB,4BAAqD,uBAAOC,KAAK,OAAOC,KAAK,KAAKF,UAAU,aAAaG,MAAOhB,EAAciB,SAAU,SAACC,GAAD,OAdvJ,SAACC,GACnBlB,EAAgBkB,GAChB,IAAMC,EAAgBxB,EAAcyB,QAAO,SAACC,EAAMf,GAAP,OAAiBe,EAAKb,UAAUc,cAAcC,SAASxB,EAAauB,kBAE/GxB,EAAgBqB,GACZD,EAASM,OAAS,GAClB1B,EAAgBH,GAQ4J8B,CAAcR,EAAES,OAAOX,UAAnM,OAEA,qBAAKH,UAAU,YAAf,SAEQf,EAAaO,KAAI,SAACiB,EAAMf,GAAP,OACb,sBAAiBM,UAAU,iBAA3B,UACI,cAACe,EAAA,EAAD,CACIC,QAASP,EAAKX,MACdmB,KAAMR,EAAKb,UACXsB,MAAM,UACNC,QAAS,SAACd,GAAD,OAAOxB,EAAMuC,mBAAmBf,EAAES,OAAOG,OAClDb,SAAU,SAACC,IAtClB,SAACT,GAElB,IAAMyB,EAAWtC,EAAcS,KAAI,SAACiB,EAAMf,GAItC,OAHIe,EAAKb,YAAcA,IACnBa,EAAKX,OAASW,EAAKX,OAEhBW,KAEXzB,EAAiBqC,GA8B0BC,CAAajB,EAAES,OAAOG,SAE7C,4BAAIR,EAAKb,YACT,yBATMF,Y,MCtBnB6B,MAxCf,SAAmB1C,GAMf,OACI,mCAEI,sBAAKmB,UAAU,SAAf,UACA,qBAAKA,UAAU,gBAAf,2BAESnB,EAAM2C,aAK+C,sBAAKxB,UAAU,UAAf,cAA2BnB,EAAM4C,mBAAmBjC,KAAI,SAACiB,EAAMf,GAAP,OAGtGe,EAAKX,OAED,gCACI,oBAAIE,UAAU,WAAd,SAA0BS,EAAKA,OAC/B,qBAAKT,UAAU,cAAf,SACI,+BAAI,mBAAG0B,MAAO,CAAEC,YAAa,QAAzB,uBAAJ,cAA+D,kCAA/D,IAAyElB,EAAKmB,UAAU,uBACpF,mBAAGF,MAAO,CAAEC,YAAa,QAAzB,wBADJ,aAC+D,kCAD/D,IACyElB,EAAKoB,UAAU,uBACpF,mBAAGH,MAAO,CAAEC,YAAa,QAAzB,0BAFJ,WAE+D,kCAF/D,IAEyElB,EAAKqB,aAAa,uBACvF,mBAAGJ,MAAO,CAAEC,YAAa,QAAzB,0BAHJ,WAG+D,kCAH/D,IAGyElB,EAAKsB,aAAa,uBACvF,mBAAGL,MAAO,CAAEC,YAAa,QAAzB,iCAJJ,IAI+D,kCAJ/D,IAIyEK,KAAKC,MAAMxB,EAAKyB,qBAAqB,uBAC1G,mBAAGR,MAAO,CAAEC,YAAa,OAAzB,iCALJ,IAK8D,kCAL9D,IAKwEK,KAAKC,MAAMxB,EAAK0B,4BARtFzC,SATlB,qBAAKgC,MAAO,CACRU,UAAW,QACXlB,MAAO,YACPmB,WAAY,OAHhB,0DCYTC,MA5Bf,WACI,OACI,gCACI,sBAAKZ,MAAO,CAAER,MAAM,OAApB,UAA4B,+CAA5B,OACE,qBAAKQ,MAAO,CACRa,UAAU,OACVC,SAAS,QAFb,wGAKA,qBAAKd,MAAO,CACRa,UAAU,OACVC,SAAS,QAFb,+HAKA,sBAAKd,MAAO,CACRa,UAAU,OACVC,SAAS,QAFb,8EAIY,qBAAKd,MAAO,CACRe,WAAW,OACXD,SAAS,QAFb,yG,cCkFXE,MAhGf,WAAuB,MAIuB5D,mBAAS,IAJhC,mBAIZ6D,EAJY,KAIGC,EAJH,OAOqB9D,mBAAS,IAP9B,mBAOZK,EAPY,KAOEC,EAPF,OAUuBN,mBAAS6D,GAVhC,mBAUZE,EAVY,KAUGC,EAVH,KAyDnB,OA5CAzD,qBAAU,WACN,IAAIC,EAAO,GACXyD,EAAQvD,KAAI,SAACwD,EAAQtD,GACjB,IAAIuD,EAAW,CACXC,QAASF,EAAOE,QAChBC,WAAYH,EAAOG,WACnBC,IAAKJ,EAAOI,IACZC,cAAeL,EAAOK,cACtBC,QAAStB,KAAKC,MAAMsB,OAAOP,EAAOM,UAClCE,WAAYxB,KAAKC,MAAMsB,OAAOP,EAAOQ,aACrC1D,OAAO,GAEXR,EAAKS,KAAKkD,MAEdL,EAAiBtD,GACjBwD,EAAiBxD,KAClB,IA6BC,sBAAKU,UAAU,UAAf,UACI,sBAAKA,UAAU,aAAf,UAA4B,sBAAMA,UAAU,gBAAhB,6BAAsD,uBAAOC,KAAK,OAAOC,KAAK,KAAKF,UAAU,aAAaG,MAAOhB,EAAciB,SAAU,SAACC,GAAD,OAdvJ,SAACoD,GAEnBrE,EAAgBqE,GAEhB,IAAMlD,EAAgBoC,EAAcnC,QAAO,SAACwC,GAAD,OAAYA,EAAOE,QAAQxC,cAAcC,SAASxB,EAAauB,kBAC1GoC,EAAiBvC,GACbkD,EAAU7C,OAAS,GACnBkC,EAAiBH,GAO2Je,CAAcrD,EAAES,OAAOX,aACnM,qBAAKH,UAAU,cAAf,SACI6C,EAAcrD,KAAI,SAACwD,EAAQtD,GAAT,OAEV,sBAAKM,UAAU,SAAf,UACI,gCACI,cAACe,EAAA,EAAD,CACIC,QAASgC,EAAOlD,MAChBmB,KAAM+B,EAAOE,QACbhC,MAAM,UACNd,SAAU,SAACC,IApCtB,SAACsD,GAClB,IAAMtC,EAAWsB,EAAcnD,KAAI,SAACwD,EAAQtD,GAKxC,OAJIsD,EAAOE,UAAYS,IACnBX,EAAOlD,OAASkD,EAAOlD,OAGpBkD,KAEXJ,EAAiBvB,GA4B8BuC,CAAavD,EAAES,OAAOG,SAE7C,4BAAI+B,EAAOE,aAEf,8BAEQF,EAAOlD,MAEC,+BACI,mBAAG4B,MAAO,CAAEC,YAAa,QAAzB,kBADJ,IACgD,kCADhD,IAC0DqB,EAAOE,QAAQ,uBACrE,mBAAGxB,MAAO,CAAEC,YAAa,QAAzB,wBAFJ,IAEsD,kCAFtD,IAEgEqB,EAAOG,WAAW,uBAC9E,mBAAGzB,MAAO,CAAEC,YAAa,QAAzB,iBAHJ,IAG+C,kCAH/C,IAGyDqB,EAAOI,IAAI,uBAChE,mBAAG1B,MAAO,CAAEC,YAAa,QAAzB,qBAJJ,IAImD,kCAJnD,IAI6DqB,EAAOM,QAAQ,uBACxE,mBAAG5B,MAAO,CAAEC,YAAa,OAAzB,yBALJ,IAKsD,kCALtD,IAKgEqB,EAAOQ,WAAW,0BAGrF,SAtBY9D,Y,QCNtCmE,MArDf,WAAe,MAG6B/E,mBAASgF,GAHtC,mBAGNC,EAHM,KAGSC,EAHT,OAK6BlF,mBAAS,GALtC,mBAKJ0C,EALI,KAKUyC,EALV,KA4Bb,OACE,sBAAKjE,UAAU,MAAf,UAGA,qBAAKA,UAAU,eAAf,oCAGA,sBAAKA,UAAU,WAAf,UAGE,cAAC,EAAD,CAAOoB,mBA/BX,SAAqBxB,GACnB,IAAMyB,EAAW0C,EAAcvE,KAAI,SAACiB,GAahC,OAZAyD,QAAQC,IAAIvE,GACTa,EAAKA,OAASb,IAEba,EAAKX,OAASW,EAAKX,MAChBW,EAAKX,MAENmE,EAAgBzC,EAAa,GAG7ByC,EAAgBzC,EAAa,IAG5Bf,KAGXuD,EAAiB3C,MAgBf,cAAC,EAAD,CAAWI,mBAAoBsC,EAAevC,aAAcA,IAE5D,cAAC,EAAD,OAIA,8BACE,cAAC,EAAD,UC5CO4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7fa1b8c3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport team_data from '../teams.json'\r\nimport { Checkbox } from '@material-ui/core'\r\nimport '../ALL_CSS/teams.css'\r\n\r\n\r\nfunction Teams(props) {\r\n\r\n    //New Data for teams (static)\r\n    const [updated_teams, setupdated_teams] = useState([])\r\n\r\n    //This will gets updated as the value changes of search bar of team (section - 1)\r\n    const [search_teams, setsearch_teams] = useState(updated_teams)\r\n\r\n    //The team search bar value\r\n    const [search_value, setsearch_value] = useState(\"\")\r\n\r\n    //Creating new data from the use of Existing data (New_Data = updated_teams)\r\n    useEffect(() => {\r\n        let temp = []\r\n        team_data.map((teams, index) => {\r\n            let new_team = {\r\n                team_name: teams.team1,\r\n                check: false\r\n            }\r\n            temp.push(new_team)\r\n        })\r\n        setupdated_teams(temp)\r\n        setsearch_teams(temp)\r\n    }, [])\r\n\r\n    //Fucntion will call when there is any changes in any checkbox value \r\n    //And print & hide details in section - 2, according to the value of checkbox\r\n    const handlechange = (team_name) => {\r\n\r\n        const temp_arr = updated_teams.map((team, index) => {\r\n            if (team.team_name === team_name) {\r\n                team.check = !team.check\r\n            }\r\n            return team;\r\n        })\r\n        setupdated_teams(temp_arr)\r\n\r\n    }\r\n\r\n    //As the value of team search bar changes this function will filter data accordingly\r\n    const handle_search = (bar_name) => {\r\n        setsearch_value(bar_name)\r\n        const filter_output = updated_teams.filter((team, index) => team.team_name.toLowerCase().includes(search_value.toLowerCase()))\r\n\r\n        setsearch_teams(filter_output)\r\n        if (bar_name.length < 1) {\r\n            setsearch_teams(updated_teams)\r\n        }\r\n    }\r\n\r\n    //Renders the team names with checkbox in section - 1\r\n    return (\r\n        <div className=\"teams\">\r\n\r\n            <div className=\"div_searchh\"><span className=\"text_box_text\">Search Team : </span><input type=\"text\" size=\"30\" className=\"input_text\" value={search_value} onChange={(e) => handle_search(e.target.value)} /> </div>\r\n\r\n            <div className=\"team_list\">\r\n                {\r\n                    search_teams.map((team, index) => (\r\n                        <div key={index} className=\"teams_eachteam\">\r\n                            <Checkbox\r\n                                checked={team.check}\r\n                                name={team.team_name}\r\n                                color=\"primary\"\r\n                                onClick={(e) => props.on_checkbox_change(e.target.name)}\r\n                                onChange={(e) => { handlechange(e.target.name); }}\r\n                            />\r\n                            <b>{team.team_name}</b>\r\n                            <br></br>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Teams\r\n","import React from 'react'\r\nimport '../ALL_CSS/team_stats.css'\r\n\r\n\r\nfunction Teamstats(props) {\r\n\r\n    //Props will set the data in 'teamStates' as per the changes in any checkbox of section - 1\r\n    //const [teamStates, setTeamStates] = useState(props.updated_team_stats)\r\n\r\n    //Renders the 'teamStates' with deatils in section - 2\r\n    return (\r\n        <>\r\n            \r\n            <div className=\"forAll\">\r\n            <div className=\"selected_team\">Seleted Teams</div>\r\n                {\r\n                    !props.count_of_set ?\r\n                        <div style={{\r\n                            marginTop: \"126px\",\r\n                            color: \"orangered\",\r\n                            fontWeight: \"500\"\r\n                        }}>No Teams Selected From Left Side Panel</div> : <div className=\"wrapper\"> {props.updated_team_stats.map((team, index) =>\r\n\r\n\r\n                            team.check &&\r\n                            (\r\n                                <div key={index}>\r\n                                    <h1 className=\"for_name\">{team.team}</h1>\r\n                                    <div className=\"for_details\">\r\n                                        <h5><b style={{ marginRight: \"66px\" }}>Home Wins</b>           <b>:</b> {team.home_wins}<br></br>\r\n                                            <b style={{ marginRight: \"70px\" }}>Away Wins </b>          <b>:</b> {team.away_wins}<br></br>\r\n                                            <b style={{ marginRight: \"46px\" }}>Home matches</b>        <b>:</b> {team.home_matches}<br></br>\r\n                                            <b style={{ marginRight: \"49px\" }}>Away matches</b>        <b>:</b> {team.away_matches}<br></br>\r\n                                            <b style={{ marginRight: \"-1px\" }}>Home Win Percentage</b> <b>:</b> {Math.round(team.home_win_percentage)}<br></br>\r\n                                            <b style={{ marginRight: \"3px\" }}>Away Win Percentage</b> <b>:</b> {Math.round(team.away_win_percentage)}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            ))}</div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Teamstats","import React from 'react'\r\nfunction Instruction() {\r\n    return (\r\n        <div>\r\n            <div style={{ color:\"red\"}}><b>Instructions :</b> </div>\r\n              <div style={{\r\n                  textAlign:\"left\",\r\n                  fontSize:\"15px\"\r\n              }}>Section 1 : 1)All the teams are mentioned with their name and checkbox associated with it.</div>\r\n\r\n              <div style={{\r\n                  textAlign:\"left\",\r\n                  fontSize:\"15px\"\r\n              }}>Section 2 : 1) As you mark any team checkbox from section 1, respected team details will be print in Section - 2;</div>\r\n\r\n              <div style={{\r\n                  textAlign:\"left\",\r\n                  fontSize:\"15px\"\r\n              }}>Section 3 : 1)Given player names and checkbox associated with it.\r\n                          <div style={{\r\n                              marginLeft:\"73px\",\r\n                              fontSize:\"15px\"\r\n                          }}>2) as you mark any check box the details of respected player will be shown below it.</div>\r\n                </div>\r\n                         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Instruction\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Checkbox } from '@material-ui/core'\r\nimport p_stats from '../most_runs_average_strikerate.json'\r\nimport '../ALL_CSS/player_stats.css'\r\nfunction Playerstats() {\r\n\r\n\r\n    //New Deatils of PLayer(static Data)\r\n    const [new_p_details, setnew_p_details] = useState([])\r\n\r\n    //Value Of Search Bar of Section - 3\r\n    const [search_value, setsearch_value] = useState(\"\")\r\n\r\n    //Dynamic value According to Search_bar\r\n    const [search_player, setsearch_player] = useState(new_p_details)\r\n\r\n    //Creating new data from the use of Existing data (New_Data = new_p_details)\r\n    useEffect(() => {\r\n        let temp = []\r\n        p_stats.map((player, index) => {\r\n            let new_data = {\r\n                batsman: player.batsman,\r\n                total_runs: player.total_runs,\r\n                out: player.out,\r\n                numberofballs: player.numberofballs,\r\n                average: Math.round(Number(player.average)),\r\n                strikerate: Math.round(Number(player.strikerate)),\r\n                check: false\r\n            }\r\n            temp.push(new_data)\r\n        })\r\n        setnew_p_details(temp)\r\n        setsearch_player(temp)\r\n    }, [])\r\n\r\n    //Fucntion will call when there is any changes in any checkbox value \r\n    //And print & hide details according to the value of checkbox\r\n    const action_event = (player_name) => {\r\n        const temp_arr = new_p_details.map((player, index) => {\r\n            if (player.batsman === player_name) {\r\n                player.check = !player.check\r\n\r\n            }\r\n            return player;\r\n        })\r\n        setnew_p_details(temp_arr)\r\n    }\r\n\r\n    //As the value of player search bar changes this function will filter data accordingly\r\n    const handle_change = (bar_value) => {\r\n\r\n        setsearch_value(bar_value)\r\n\r\n        const filter_output = new_p_details.filter((player) => player.batsman.toLowerCase().includes(search_value.toLowerCase()))\r\n        setsearch_player(filter_output)\r\n        if (bar_value.length < 1) {\r\n            setsearch_player(new_p_details)\r\n        }\r\n    }\r\n\r\n    //Renders the player details as per the current state of 'search_player' in section - 3\r\n    return (\r\n        <div className=\"for_div\">\r\n            <div className=\"div_search\"><span className=\"text_box_text\">Search Player :</span><input type=\"text\" size=\"30\" className=\"input_text\" value={search_value} onChange={(e) => handle_change(e.target.value)} /></div>\r\n            <div className=\"player_list\">{\r\n                search_player.map((player, index) =>\r\n                    (\r\n                        <div className=\"forall\" key={index}>\r\n                            <div>\r\n                                <Checkbox\r\n                                    checked={player.check}\r\n                                    name={player.batsman}\r\n                                    color=\"primary\"\r\n                                    onChange={(e) => { action_event(e.target.name); }}\r\n                                />\r\n                                <b>{player.batsman}</b>\r\n                            </div>\r\n                            <div>\r\n                                {\r\n                                    player.check ?\r\n                                        (\r\n                                            <h5>\r\n                                                <b style={{ marginRight: \"36px\" }}>Name</b> <b>:</b> {player.batsman}<br></br>\r\n                                                <b style={{ marginRight: \"11px\" }}>total_runs</b> <b>:</b> {player.total_runs}<br></br>\r\n                                                <b style={{ marginRight: \"50px\" }}>Out</b> <b>:</b> {player.out}<br></br>\r\n                                                <b style={{ marginRight: \"23px\" }}>Average</b> <b>:</b> {player.average}<br></br>\r\n                                                <b style={{ marginRight: \"5px\" }}>Strike-Rate</b> <b>:</b> {player.strikerate}<br></br>\r\n                                            </h5>\r\n                                        ) :\r\n                                        (null)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Playerstats\r\n","import './App.css';\nimport React , {useState } from 'react';\nimport Teams from './All_Data/Componenets/Teams';\nimport Teamstats from './All_Data/Componenets/Teamstats';\nimport Instruction from './All_Data/Componenets/Instruction';\nimport Playerstats from './All_Data/Componenets/Playerstats';\n\n//Importing Data Files\nimport teamstats from './All_Data/teamwise_home_and_away.json'\nfunction App() {\n  \n  //Below State will contain team statatics.\n  const [App_team_data, setApp_team_data] = useState(teamstats)\n\n    const [count_of_set, setcount_of_set] = useState(0)\n   //Fucntion for changing visibility of team statatics (Section - 2)\n  function change_view(team_name)  {\n    const temp_arr = App_team_data.map((team) =>{\n        console.log(team_name)\n        if(team.team === team_name)\n        {\n            team.check = !team.check\n            if(team.check)\n            {\n              setcount_of_set(count_of_set+1)\n            }\n            else{\n              setcount_of_set(count_of_set-1)\n            }\n        }\n        return team\n    })\n\n    setApp_team_data(temp_arr)\n}\n\n\n  return (\n    <div className=\"App\">\n     \n     {/* Div for welcome text*/ }\n    <div className=\"Welcome_text\">Welcome To IPL Stats!!</div>\n\n    {/* Div for logic of page */}\n    <div className=\"ShortBox\">\n\n      {/* Component of Section - 1  */}\n      <Teams on_checkbox_change = {change_view}/>\n      {/* component of Section -2  */}\n      <Teamstats updated_team_stats={App_team_data} count_of_set={count_of_set}/>\n      {/* component of Section -3 */}\n      <Playerstats/>\n    </div>\n\n    {/* final component for Instructions  */}\n      <div>\n        <Instruction/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}